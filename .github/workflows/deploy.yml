name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no -T ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} << 'EOF'
            # Ensure known hosts for GitHub
            mkdir -p ~/.ssh
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts

            # Navigate to your project directory
            if [ ! -d "${{ secrets.PROJECT_PATH }}" ]; then
            # Clone the repo if not already cloned
                git clone git@github.com:madfcat/corsearch-assignment.git ${{ secrets.PROJECT_PATH }}
            fi
            cd ${{ secrets.PROJECT_PATH }}
            echo "GRAPHQL_API_TOKEN=${{ secrets.GRAPHQL_API_TOKEN }}" > .env
            echo "GRAPHQL_ENDPOINT=${{ secrets.GRAPHQL_ENDPOINT }}" >> .env
            echo "VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}" >> .env
            echo "GEOCODING_ENDPOINT=${{ secrets.GEOCODING_ENDPOINT }}" >> .env

            # Pull the latest changes
            git pull origin main

            
            # Check if 'make' is installed
            if ! command -v make &> /dev/null; then
              # Update package list
              sudo apt update
              echo "make is not installed. Installing..."
              sudo apt install build-essential
            else
              echo "make is already installed."
            fi

            # Rebuild and restart the Docker Compose project
            make clean
            make prod
          EOF
